type Query {
    getProduct(id: Int!): Product!
    getAllProducts: [Product]!
    getProductType(type: typeProd!, limit: Int!): [Product!]!
    getProductCat(category: String!, limit: Int!): [Product!]!
    getProductsForHome: [[Product!]!]!

    "user's land"
    checkLogin(email: String!, password: String!): CheckLoginRes!
    "get all users"
    getAllUsers: [User!]

    loggedInUser: User

    getUser: User


    """
    comments land
    """
    getAllComments: [Comment]!
    getCommentsWithProd(prodId: ID!): [Comment]!
}

type Mutation {
    createCus(user: CreateCus!): CreateCusResponse!
    login(email: String, password: String!): Tokens
    "user land"
    upGradeUser(email: String!) : User
    deGradeUser(email: String!): User

}

enum typeProd {
    new
    hot
    trend
    newImport
}

input CreateCus {
    fullName: String!
    email: String!
    password: String!
}

type CheckLoginRes {
    code: Int!
    success: Boolean!
    message: String!
    user: User
}
